{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","firstImageIndex","handleSwipeClick","step","props","images","frameSize","infinite","lastIndex","length","nextIndex","setState","this","itemWidth","animationDuration","transformValue","isPrevDisabled","isNextDisabled","className","style","width","height","transition","transform","map","image","src","alt","type","onClick","Component","App","handleStepChange","event","Number","target","value","handleFrameSizeChange","handleItemWidthChange","handleAnimationDurationChange","handleInfiniteChange","checked","htmlFor","id","name","min","max","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e8a0764.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[]\n  step: number\n  frameSize: number\n  itemWidth: number\n  animationDuration: number\n  infinite: boolean\n}\n\ninterface State {\n  firstImageIndex: number,\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    firstImageIndex: 0,\n  };\n\n  handleSwipeClick = (step: number) => {\n    const {\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const { firstImageIndex } = this.state;\n\n    const lastIndex = images.length - frameSize;\n    let nextIndex = firstImageIndex + step;\n\n    if (infinite) {\n      if (nextIndex < 0) {\n        nextIndex = lastIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = 0;\n      }\n    } else {\n      if (step > 0 && nextIndex > lastIndex) {\n        nextIndex = lastIndex;\n      }\n\n      if (step < 0 && nextIndex < 0) {\n        nextIndex = 0;\n      }\n    }\n\n    this.setState(() => ({\n      firstImageIndex: nextIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { firstImageIndex } = this.state;\n\n    const transformValue = itemWidth * firstImageIndex;\n    const isPrevDisabled = firstImageIndex === 0 && !infinite;\n    const isNextDisabled = (firstImageIndex === images.length - frameSize)\n      && !infinite;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__container\"\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${frameSize * itemWidth}px`,\n              height: `${itemWidth}px`,\n              transition: `transform ${animationDuration}ms`,\n              transform: `translateX(${-transformValue}px)`,\n            }}\n          >\n            {images.map(image => (\n              <li key={image} className=\"Carousel__list-item\">\n                <img\n                  src={`${image}`}\n                  alt={`${image[6]}`}\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__button-container\">\n          <button\n            type=\"button\"\n            className={`Carousel__button ${isPrevDisabled ? 'disabled' : ''}`}\n            onClick={() => this.handleSwipeClick(-step)}\n          >\n            <img\n              src=\"./img/left-arrow.svg\"\n              alt=\"left-arrow\"\n              width=\"30px\"\n            />\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className={`Carousel__button ${isNextDisabled ? 'disabled' : ''}`}\n            onClick={() => this.handleSwipeClick(step)}\n          >\n            <img\n              src=\"./img/right-arrow.svg\"\n              alt=\"right-arrow\"\n              width=\"30px\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleStepChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: Number(event.target.value),\n    });\n  };\n\n  handleFrameSizeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: Number(event.target.value),\n    });\n  };\n\n  handleItemWidthChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(event.target.value),\n    });\n  };\n\n  handleAnimationDurationChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(event.target.value),\n    });\n  };\n\n  handleInfiniteChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: event.target.checked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <fieldset className=\"App__parameters\">\n          <label htmlFor=\"step\" className=\"App__parameter\">\n            <input\n              id=\"step\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min={1}\n              max={images.length}\n              onChange={this.handleStepChange}\n            />\n            Step\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__parameter\">\n            <input\n              id=\"frameSize\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"FrameSize\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              onChange={this.handleFrameSizeChange}\n            />\n            Frame Size\n          </label>\n\n          <label htmlFor=\"itemWidth\" className=\"App__parameter\">\n            <input\n              id=\"itemWidth\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"ItemWidth\"\n              value={itemWidth}\n              min={50}\n              max={400}\n              onChange={this.handleItemWidthChange}\n            />\n            Item Width\n          </label>\n\n          <label htmlFor=\"animation\" className=\"App__parameter\">\n            <input\n              id=\"animation\"\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min={300}\n              max={5000}\n              onChange={this.handleAnimationDurationChange}\n            />\n            Animation Duration\n          </label>\n\n          <label\n            htmlFor=\"isInfinite\"\n            className=\"App__parameter\"\n          >\n            <input\n              type=\"checkbox\"\n              className=\"App__input App__input-checkbox\"\n              id=\"isInfinite\"\n              checked={infinite}\n              onChange={this.handleInfiniteChange}\n            />\n            Infinite Scroll\n          </label>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}