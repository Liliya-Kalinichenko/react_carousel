{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","firstImage","setFirtstImage","lastFirstImage","length","isLastImage","isFirstImage","transformValue","className","style","width","height","transition","transform","map","image","src","alt","type","onClick","nextFirstImage","App","state","handleStepChange","event","setState","Number","target","value","handleFrameSizeChange","handleItemWidthChange","handleAnimationDurationChange","handleInfiniteChange","Boolean","this","htmlFor","id","name","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAmHeA,EAvGmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAqCC,mBAAS,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBT,EAAOU,OAASR,EACjCS,EAAcJ,IAAeE,EAC7BG,EAA8B,IAAfL,EACfM,EAAiBV,EAAYI,EA8BnC,OACE,sBAAKO,UAAU,WAAf,UACE,qBACEA,UAAU,sBADZ,SAGE,oBACEA,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKd,EAAYC,EAAjB,MACLc,OAAO,GAAD,OAAKd,EAAL,MACNe,WAAW,aAAD,OAAed,EAAf,MACVe,UAAU,cAAD,QAAiBN,EAAjB,QANb,SASGb,EAAOoB,KAAI,SAACC,GAAD,OACV,oBAAgBP,UAAU,sBAA1B,SACE,qBACEQ,IAAG,UAAKD,GACRE,IAAG,UAAKF,EAAM,IACdL,MAAOb,KAJFkB,UAWf,sBAAKP,UAAU,6BAAf,UACE,wBACEU,KAAK,SACLV,UAAWF,EACP,4BACA,mBACJa,QA9CgB,WACtB,GAAKb,GAAiBP,EASpBG,EAAe,OATe,CAC9B,IAAMkB,EAAiBnB,EAAaN,EAEpCO,EACEkB,EAAiB,EACbA,EACA,KAkCJ,SAOE,qBACEJ,IAAI,uBACJC,IAAI,aACJP,MAAM,WAIV,wBACEQ,KAAK,SACL,UAAQ,OACRV,UAAWH,EACP,4BACA,mBACJc,QA3EgB,WACtB,GAAKd,GAAgBN,EASnBG,EAAeC,OATc,CAC7B,IAAMiB,EAAiBnB,EAAaN,EAEpCO,EACEkB,EAAiBjB,EACbA,EACAiB,KA8DJ,SAQE,qBACEJ,IAAI,wBACJC,IAAI,cACJP,MAAM,kBC9FZW,E,4MACJC,MAAQ,CACN5B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,G,EAGZwB,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZ9B,KAAM+B,OAAOF,EAAMG,OAAOC,U,EAI9BC,sBAAwB,SAACL,GACvB,EAAKC,SAAS,CACZ7B,UAAW8B,OAAOF,EAAMG,OAAOC,U,EAInCE,sBAAwB,SAACN,GACvB,EAAKC,SAAS,CACZ5B,UAAW6B,OAAOF,EAAMG,OAAOC,U,EAInCG,8BAAgC,SAACP,GAC/B,EAAKC,SAAS,CACZ3B,kBAAmB4B,OAAOF,EAAMG,OAAOC,U,EAI3CI,qBAAuB,SAACR,GACtB,EAAKC,SAAS,CACZ1B,SAAUkC,QAAQT,EAAMG,OAAOC,U,4CAInC,WACE,MAOIM,KAAKZ,MANP5B,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGF,OACE,sBAAKS,UAAU,MAAf,UAEE,oBAAI,UAAQ,QAAZ,iCACoBd,EAAOU,OAD3B,aAIA,cAAC,EAAD,CACEV,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,IAGZ,2BAAUS,UAAU,kBAApB,UACE,wBAAO2B,QAAQ,OAAO3B,UAAU,iBAAhC,UACE,uBACE4B,GAAG,OACH5B,UAAU,aACVU,KAAK,SACLmB,KAAK,OACLT,MAAOjC,EACP2C,IAAK,EACLC,IAAK7C,EAAOU,OACZoC,SAAUN,KAAKX,mBATnB,UAcA,wBAAOY,QAAQ,YAAY3B,UAAU,iBAArC,UACE,uBACE4B,GAAG,YACH5B,UAAU,aACVU,KAAK,SACLmB,KAAK,YACLT,MAAOhC,EACP0C,IAAK,EACLC,IAAK7C,EAAOU,OACZoC,SAAUN,KAAKL,wBATnB,gBAcA,wBAAOM,QAAQ,YAAY3B,UAAU,iBAArC,UACE,uBACE4B,GAAG,YACH5B,UAAU,aACVU,KAAK,SACLmB,KAAK,YACLT,MAAO/B,EACPyC,IAAK,GACLC,IAAK,IACLC,SAAUN,KAAKJ,wBATnB,gBAcA,wBAAOK,QAAQ,YAAY3B,UAAU,iBAArC,UACE,uBACE4B,GAAG,YACH5B,UAAU,aACVU,KAAK,SACLU,MAAO9B,EACPwC,IAAK,IACLC,IAAK,IACLC,SAAUN,KAAKH,gCARnB,wBAaA,wBACEI,QAAQ,aACR3B,UAAU,iBAFZ,UAIE,uBACEU,KAAK,WACLV,UAAU,iCACV4B,GAAG,aACHR,MAAK,UAAK7B,GACVyC,SAAUN,KAAKF,uBATnB,+B,GArIQS,IAAMC,WAwJTrB,IClKfsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0d2ae375.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[]\n  step: number\n  frameSize: number\n  itemWidth: number\n  animationDuration: number\n  infinite: boolean\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [firstImage, setFirtstImage] = useState(0);\n\n  const lastFirstImage = images.length - frameSize;\n  const isLastImage = firstImage === lastFirstImage;\n  const isFirstImage = firstImage === 0;\n  const transformValue = itemWidth * firstImage;\n\n  const handleNextClick = () => {\n    if (!isLastImage && !infinite) {\n      const nextFirstImage = firstImage + step;\n\n      setFirtstImage(\n        nextFirstImage > lastFirstImage\n          ? lastFirstImage\n          : nextFirstImage,\n      );\n    } else {\n      setFirtstImage(lastFirstImage);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (!isFirstImage && !infinite) {\n      const nextFirstImage = firstImage - step;\n\n      setFirtstImage(\n        nextFirstImage > 0\n          ? nextFirstImage\n          : 0,\n      );\n    } else {\n      setFirtstImage(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            height: `${itemWidth}px`,\n            transition: `transform ${animationDuration}ms`,\n            transform: `translateX(${-transformValue}px)`,\n          }}\n        >\n          {images.map((image: string) => (\n            <li key={image} className=\"Carousel__list-item\">\n              <img\n                src={`${image}`}\n                alt={`${image[6]}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__button-container\">\n        <button\n          type=\"button\"\n          className={isFirstImage\n            ? 'Carousel__button disabled'\n            : 'Carousel__button'}\n          onClick={handlePrevClick}\n        >\n          <img\n            src=\"./img/left-arrow.svg\"\n            alt=\"left-arrow\"\n            width=\"30px\"\n          />\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={isLastImage\n            ? 'Carousel__button disabled'\n            : 'Carousel__button'}\n          onClick={handleNextClick}\n        >\n          <img\n            src=\"./img/right-arrow.svg\"\n            alt=\"right-arrow\"\n            width=\"30px\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleStepChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: Number(event.target.value),\n    });\n  };\n\n  handleFrameSizeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: Number(event.target.value),\n    });\n  };\n\n  handleItemWidthChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(event.target.value),\n    });\n  };\n\n  handleAnimationDurationChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(event.target.value),\n    });\n  };\n\n  handleInfiniteChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: Boolean(event.target.value),\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <fieldset className=\"App__parameters\">\n          <label htmlFor=\"step\" className=\"App__parameter\">\n            <input\n              id=\"step\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min={1}\n              max={images.length}\n              onChange={this.handleStepChange}\n            />\n            Step\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__parameter\">\n            <input\n              id=\"frameSize\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"FrameSize\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              onChange={this.handleFrameSizeChange}\n            />\n            Frame Size\n          </label>\n\n          <label htmlFor=\"itemWidth\" className=\"App__parameter\">\n            <input\n              id=\"itemWidth\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"ItemWidth\"\n              value={itemWidth}\n              min={50}\n              max={400}\n              onChange={this.handleItemWidthChange}\n            />\n            Item Width\n          </label>\n\n          <label htmlFor=\"animation\" className=\"App__parameter\">\n            <input\n              id=\"animation\"\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min={300}\n              max={5000}\n              onChange={this.handleAnimationDurationChange}\n            />\n            Animation Duration\n          </label>\n\n          <label\n            htmlFor=\"isInfinite\"\n            className=\"App__parameter\"\n          >\n            <input\n              type=\"checkbox\"\n              className=\"App__input App__input-checkbox\"\n              id=\"isInfinite\"\n              value={`${infinite}`}\n              onChange={this.handleInfiniteChange}\n            />\n            Infinite Scroll\n          </label>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}